/*
TODO: better colors
  https://material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=0040ff&secondary.color=FFC400&secondary.text.color=000000&primary.text.color=ffffff
 */
:root {
  // colors
  --color-primary: #0040ff;
  --color-primary-light: #6e6cff;
  --color-primary-dark: #0017ca;
  --color-primary-text: #ffffff;

  --color-secondary: #ffc400;
  --color-secondary-light: #fff64f;
  --color-secondary-dark: #c79400;
  --color-secondary-text: #000000;

  $breakpoints: (
    // Small screen / phone
    tablet: 544px,
    // Medium screen / tablet
    small: 768px,
    // Large screen / desktop (980 + (12 * 2)) <= container + gutters
    large: 1012px,
    // Extra large screen / wide desktop
    extra-large: 1280px
  ) !default;

  // body font size
  --text-base-size: 1em;

  // type scale
  --text-scale-ratio: 1.2;
  --text-xs: calc((1em / var(--text-scale-ratio)) / var(--text-scale-ratio));
  --text-sm: calc(var(--text-xs) * var(--text-scale-ratio));
  --text-md: calc(
    var(--text-sm) * var(--text-scale-ratio) * var(--text-scale-ratio)
  );
  --text-lg: calc(var(--text-md) * var(--text-scale-ratio));
  --text-xl: calc(var(--text-lg) * var(--text-scale-ratio));
  --text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));
  --text-xxxl: calc(var(--text-xxl) * var(--text-scale-ratio));

  // font
  --font-family: "Roboto", sans-serif;

  // space
  --space-unit: 1em;
  --space-xxxxs: calc(0.125 * var(--space-unit));
  --space-xxxs: calc(0.25 * var(--space-unit));
  --space-xxs: calc(0.375 * var(--space-unit));
  --space-xs: calc(0.5 * var(--space-unit));
  --space-sm: calc(0.75 * var(--space-unit));
  --space-md: calc(1.25 * var(--space-unit));
  --space-lg: calc(2 * var(--space-unit));
  --space-xl: calc(3.25 * var(--space-unit));
  --space-xxl: calc(5.25 * var(--space-unit));
  --space-xxxl: calc(8.5 * var(--space-unit));
  --space-xxxxl: calc(13.75 * var(--space-unit));

  @mixin breakpoint($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
      @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
        @content;
      }
    } @else if unitless($breakpoint) {
      $breakpoint: $breakpoint + 0px;

      @media (min-width: $breakpoint) {
        @content;
      }
    }
  }
}

:root,
[data-theme="default"] {
}
